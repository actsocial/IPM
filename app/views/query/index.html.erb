
<div class="form-inline" role="form">
  <div class="form-group">
    <select  id="brand-select" class="form-control">
    <% @brands.each do |brand|%>
        <option value="<%= brand.id %>"><%= brand.name%></option>
    <% end%>
    </select>
  </div>
  <div class="form-group">
    <input type="input" class="form-control" id="keyword-filter" placeholder="input keywords">
  </div>
  <div class="form-group">
    <div class="row">
        <div class="col-lg-1">Price</div>
        <div class="col-lg-2">
         <input type="input" class="form-control" id="price_start" placeholder="">
        </div>
        <div class="col-lg-1">-</div>
        <div class="col-lg-2">
         <input type="input" class="form-control" id="price_end" placeholder="">
        </div>
    </div>
  </div>
  <div class="checkbox">
    <label>
      <input type="checkbox">Taobao
    </label>
  </div>
  <button class="btn btn-danger" id="complain">Complain</button>
</div>

<table id="resultTable" class="table">
	<thead>
        <tr>
        	<th></th>
            <th>Image</th>
            <th>Title</th>
            <th>Location</th>
            <th>Price</th>
            <th>Seller</th>
            <th><select id="tagSelect"><option value>Tag</option><option>假货</option><option>超低价</option><option>假材质</option></select></th>
            <th><select id="statusSelect"><option value>Status</option><option>active</option><option>inactive</option></select></th>
            <th><select id="actionSelect"><option value>Action</option><option>solved</option></select></th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

<div class="modal fade">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
        <h4 class="modal-title">Confirm</h4>
      </div>
      <div class="modal-body">
        <p><span id="selectedCount" style="color:red"></span> links selected.</p>
        <p id="selectedLinks"></p>
        <textarea class="form-control" rows="3"  placeholder="Please input some reason here"></textarea>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Submit</button>
      </div>
    </div><!-- /.modal-content -->
  </div><!-- /.modal-dialog -->
</div><!-- /.modal -->

<script>
$.fn.dataTableExt.afnFiltering.push(
    function( oSettings, aData, iDataIndex ) {
        var iMin = document.getElementById('price_start').value * 1;
        var iMax = document.getElementById('price_end').value * 1;
        var iVersion = aData[4] == "-" ? 0 : aData[4]*1;
        if ( iMin == "" && iMax == "" )
        {
            return true;
        }
        else if ( iMin == "" && iVersion < iMax )
        {
            return true;
        }
        else if ( iMin < iVersion && "" == iMax )
        {
            return true;
        }
        else if ( iMin < iVersion && iVersion < iMax )
        {
            return true;
        }
        return false;
    }
);
(function($) {
$.fn.dataTableExt.oApi.fnGetColumnData = function ( oSettings, iColumn, bUnique, bFiltered, bIgnoreEmpty ) {
    // check that we have a column id
    if ( typeof iColumn == "undefined" ) return new Array();
     
    // by default we only want unique data
    if ( typeof bUnique == "undefined" ) bUnique = true;
     
    // by default we do want to only look at filtered data
    if ( typeof bFiltered == "undefined" ) bFiltered = true;
     
    // by default we do not want to include empty values
    if ( typeof bIgnoreEmpty == "undefined" ) bIgnoreEmpty = true;
     
    // list of rows which we're going to loop through
    var aiRows;
     
    // use only filtered rows
    if (bFiltered == true) aiRows = oSettings.aiDisplay;
    // use all rows
    else aiRows = oSettings.aiDisplayMaster; // all row numbers
 
    // set up data array   
    var asResultData = new Array();
     
    for (var i=0,c=aiRows.length; i<c; i++) {
        iRow = aiRows[i];
        var aData = this.fnGetData(iRow);
        var sValue = aData[iColumn];
         
        // ignore empty values?
        if (bIgnoreEmpty == true && sValue.length == 0) continue;
 
        // ignore unique values?
        else if (bUnique == true && jQuery.inArray(sValue, asResultData) > -1) continue;
         
        // else push the value onto the result data array
        else asResultData.push(sValue);
    }
     
    return asResultData;
}}(jQuery));
	$(document).ready(function() {
    var oTable = $('#resultTable').dataTable({
    	 "sDom": '<"div">rt<"div"lp>',
    	"bProcessing": true,
        "sAjaxSource": '/query/query.json',
        "aoColumns": [
        	{"mData":null},
            { "mData": "image" },
            { "mData": "title" },
            { "mData": "location" },
            { "mData": "price" },
            { "mData": "seller" },
            { "mData": null },
            { "mData": "status" },
            { "mData": "action" }
        ],
        "aoColumnDefs": [
        	{
        		"mRender": function( data, type, row ) {
                    return "<input type='checkbox' data-id='"+ row['id'] +"'>";
	            },
	            "aTargets": [0]
        	},
        	{
        		"mRender": function( data, type, row ) {
                    return "<img src='"+ row['image'] +"'>";
	            },
	            "aTargets": [1]
        	},
        	{
        		"mRender": function( data, type, row ) {
                    return "<a target='_blank' href='"+ row['url'] +"'>"+row['title']+"</a>";
	            },
	            "aTargets": [2]
        	},         
            {
                "mRender": function( data, type, row ) {
                    return "￥"+row['price'];
                },
                "aTargets": [4]
            },
        	{
        		"mRender": function( data, type, row ) {
                    var str="";
        			if(row['id']%3==0 || row['id']%5==0){
        				str += "<span class='badge'>假货</span>";	
        			}
                    if (row['price']<1000){
                        str += "<span class='badge'>超低价</span>"; 

                    }
					return str;                    
	            },
	            "aTargets": [6]
        	}
        ],
        "fnServerParams": function ( aoData ) {
            aoData.push( { "name":"brand_id", "value": $("#brand-select").val()} );
        }
    });
    
    
    $("#keyword-filter").keyup( function () {
        /* Filter on the column (the index) of this element */
        oTable.fnFilter( this.value, 2 );
    } );
    
    
    $('#tagSelect').click( function (e) {
    		oTable.fnFilter( $(this).val(), 6 );
        if (e.stopPropagation) {e.stopPropagation();}
        return false;
    } );
    $('#statusSelect').click( function (e) {
    		oTable.fnFilter( $(this).val(), 7 );
        if (e.stopPropagation) {e.stopPropagation();}
        return false;
    } );
    $('#actionSelect').click( function (e) {
    		oTable.fnFilter( $(this).val(), 8 );
        if (e.stopPropagation) {e.stopPropagation();}
        return false;
    } );
    
    $('#price_start').keyup( function() { oTable.fnDraw(); } );
    $('#price_end').keyup( function() { oTable.fnDraw(); } );
    
    $("#complain").on('click',function(){
    	var checked = $("#resultTable input:checked");
    	
    	$("#selectedCount").html(checked.size());
    	var links = "<ul>";
    	for (var i=0; i < checked.size(); i++) {
    		if(i > 0){
    			links += "<br>";
    		}
    		links+= "<li>";
		  links += $(checked[i]).closest("tr").find("a").attr("href");
		  links+= "</li>";
		};
		links += "</ul>";
    	$("#selectedLinks").html(links);
    	$('.modal').modal();
    });
    
     
    
//    $('#resultTable tbody').on('dblclick', 'tr', function () {
//    	
//    });
});
</script>
